<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com._520it.wms.mapper.EmployeeMapper">

    <resultMap id="BaseResultMap" type="Employee">
        <id column="id" property="id"></id>
        <result column="name" property="name"/>
        <result column="password" property="password"/>
        <result column="email" property="email"/>
        <result column="age" property="age"/>
        <result column="admin" property="admin"/>
        <association property="dept" javaType="Department">
            <id column="did" property="id"/>
            <result column="dname" property="name"/>
        </association>
        <collection property="roles" javaType="Role" column="id">
            <id column="rid" property="id"/>
            <result column="rname" property="name"/>
            <result column="rsn" property="sn"/>
        </collection>
    </resultMap>

    <resultMap id="SimpleResultMap" type="Employee">
        <id column="id" property="id"></id>
        <result column="name" property="name"/>
    </resultMap>
    <!--维护员工-角色中间表关系-->
    <insert id="insertRelation">
        INSERT into employee_role (employee_id,role_id) VALUES (#{eId},#{rId})
    </insert>
    <delete id="deleteRelation">
        DELETE FROM employee_role where employee_id=#{eId}
    </delete>

   <!-- 高级查询和分页-->
    <select id="queryTotalCount" resultType="int">
        select count(id) from employee e <include refid="base_where"/>
    </select>
    <select id="queryList" resultMap="BaseResultMap">
         SELECT e.id,e.name,e.password,e.email,e.age,e.admin,d.id did,d.name dname
        FROM employee e JOIN department d ON e.dept_id=d.id
        <include refid="base_where"/>
        limit #{start},#{pageSize}
    </select>
   <!-- 动态SQL:where语句-->
    <sql id="base_where">
        <where>
            <if test="keyword != null">
                AND (e.name LIKE concat('%',#{keyword},'%') or e.email LIKE concat('%',#{keyword},'%'))
            </if>
            <if test="deptId > 0">
                AND dept_id = #{deptId}
            </if>
        </where>
    </sql>

    <select id="listAll" resultMap="BaseResultMap">
        SELECT e.id,e.name,e.password,e.email,e.age,e.admin,d.id did,d.name dname
        FROM employee e JOIN department d ON e.dept_id=d.id
    </select>

    <select id="get" resultMap="BaseResultMap">
        SELECT e.id,e.name,e.password,e.email,e.age,e.admin,e.dept_id,r.id rid,r.name rname,r.sn rsn
        FROM employee e
        left JOIN employee_role er on e.id=er.employee_id
        left JOIN role r on er.role_id = r.id
        WHERE e.id=#{id}
    </select>

    <select id="getLogin" resultMap="BaseResultMap">
        SELECT id,name,password,email,age,admin,dept_id
        FROM employee WHERE name=#{name} and password=#{password}
    </select>

    <!--DML操作-->
    <insert id="save" useGeneratedKeys="true" keyProperty="id" keyColumn="id" >
        INSERT employee (name,password,email,age,admin,dept_id)
        VALUES (#{name},#{password},#{email},#{age},#{admin},#{dept.id})
    </insert>

    <delete id="delete">
        DELETE FROM employee WHERE id = #{id}
    </delete>
    <!--批量删除-->
    <delete id="batchDelete" >
        DELETE FROM employee WHERE id in
        <foreach item="item" collection="list" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>
    <!--批量删除中间关系-->
    <delete id="batchDeleteRelation">
        DELETE FROM employee_role WHERE employee_id in
        <foreach item="item" collection="list" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>

    <update id="update">
        UPDATE employee
        set name =#{name},
            email=#{email},
            age=#{age},
            admin=#{admin},
            dept_id=#{dept.id}
        where id=#{id}
    </update>

</mapper>