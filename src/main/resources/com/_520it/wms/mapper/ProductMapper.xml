<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com._520it.wms.mapper.ProductMapper" >

  <resultMap id="BaseResultMap" type="com._520it.wms.domain.Product" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="sn" property="sn" jdbcType="VARCHAR" />
    <result column="costPrice" property="costPrice" jdbcType="DECIMAL" />
    <result column="salePrice" property="salePrice" jdbcType="DECIMAL" />
    <result column="imagePath" property="imagePath" jdbcType="VARCHAR" />
    <result column="intro" property="intro" jdbcType="VARCHAR" />
    <!--<result column="brand_id" property="brandId" jdbcType="BIGINT" />-->
    <association property="brand" column="id" javaType="Brand" columnPrefix="brand_">
      <id column="id" property="id"/>
      <result column="name" property="name"/>
    </association>
  </resultMap>

  <resultMap id="SimpleResultMap" type="com._520it.wms.domain.Product" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
  </resultMap>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from `product`
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com._520it.wms.domain.Product" useGeneratedKeys="true" keyProperty="id" >
    insert into `product` (name, sn, costPrice, 
      salePrice, imagePath, intro, 
      brand_id)
    values (#{name,jdbcType=VARCHAR}, #{sn,jdbcType=VARCHAR}, #{costPrice,jdbcType=DECIMAL},
      #{salePrice,jdbcType=DECIMAL}, #{imagePath,jdbcType=VARCHAR}, #{intro,jdbcType=VARCHAR},
      #{brand.id,jdbcType=BIGINT})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com._520it.wms.domain.Product" >
    update `product`
    set name = #{name,jdbcType=VARCHAR},
      sn = #{sn,jdbcType=VARCHAR},
      costPrice = #{costPrice,jdbcType=DECIMAL},
      salePrice = #{salePrice,jdbcType=DECIMAL},
      imagePath = #{imagePath,jdbcType=VARCHAR},
      intro = #{intro,jdbcType=VARCHAR},
      brand_id = #{brand.id,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select id, name, sn, costPrice, salePrice, imagePath, intro, brand_id
    from `product`
    where id = #{id,jdbcType=BIGINT}
  </select>

  <sql id="base_where">
    <where>
      <if test="keyword !=null and keyword != ''">
        (p.name LIKE concat('%',#{keyword},'%') or p.sn LIKE concat('%',#{keyword},'%'))
      </if>
      <if test="brandId > 0">
        and p.brand_id =#{brandId}
      </if>
    </where>
  </sql>

  <select id="queryForCount" resultType="int">
    select COUNT(p.id) from product p <include refid="base_where"/>
  </select>
  <select id="queryForList" resultMap="BaseResultMap">
    SELECT p.id, p.name, p.sn, p.costPrice, p.salePrice, p.imagePath, p.intro, p.brand_id,b.name brand_name
    FROM product p JOIN  brand b on p.brand_id = b.id
    <include refid="base_where"/>
    limit #{start},#{pageSize}
  </select>

</mapper>